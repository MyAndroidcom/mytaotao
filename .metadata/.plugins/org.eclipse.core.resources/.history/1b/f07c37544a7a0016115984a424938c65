package com.taotao.manage.controller;

import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.github.pagehelper.PageInfo;
import com.mysql.jdbc.StringUtils;
import com.taotao.common.bean.EasyUIResult;
import com.taotao.manage.pojo.Item;
import com.taotao.manage.service.ItemDescService;
import com.taotao.manage.service.ItemService;

@RequestMapping("item")
@Controller
public class ItemController {
    
    private static final Logger LOGGER = LoggerFactory.getLogger(ItemController.class);
    
    @Autowired private ItemService itemService;

    @Autowired
    private ItemDescService itemDescService;
    
    /*
     * 新增商品
     * */
    @RequestMapping(method = RequestMethod.POST)
    public ResponseEntity<Void> saveItem(Item item, @RequestParam("desc") String desc) {
        try {
            if(LOGGER.isInfoEnabled()){
                LOGGER.info("新增商品,item={},desc={}",item,desc);
            }
            if (StringUtils.isEmptyOrWhitespaceOnly(item.getTitle())) {
                // 400
                return ResponseEntity.status(HttpStatus.BAD_REQUEST).build();
            }

            // 保存描述数据
            itemService.saveItem(item, desc);
            if(LOGGER.isInfoEnabled()){
                LOGGER.info("新增商品成功,itemId={}",item.getId());
            }
            // 成功
            return ResponseEntity.status(HttpStatus.CREATED).build();
        } catch (Exception e) {
            LOGGER.error("新增商品失败!title="+item.getTitle()+",cid="+item.getCid(),e);
//            e.printStackTrace();
        }
        // 500
        return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build();
    }
    /*
     * 查询商品列表
     * */
    @RequestMapping(method=RequestMethod.GET)
    @ResponseBody
    public ResponseEntity<EasyUIResult> queryItemList(
            @RequestParam(value="page",defaultValue="1") Integer page,
            @RequestParam(value="rows",defaultValue="30") Integer rows){
        try{
            PageInfo<Item> pageInfo = this.itemService.queryPageList(page, rows);
            Long total = pageInfo.getTotal();
            List<Item> list = pageInfo.getList();
            EasyUIResult easyUIResult = new EasyUIResult(total,list);
            return ResponseEntity.ok(easyUIResult);
        }catch(Exception e){
            e.printStackTrace();
        }
        // 出错 500
        return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(null);
    }
}
